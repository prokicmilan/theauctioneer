@using X.PagedList
@using X.PagedList.Mvc
@model IEnumerable<ViewModelLayer.Models.Auction.DisplayAuctionModel>
@{
    ViewBag.Title = "Index";
}

<h2>All auctions</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@foreach (var item in Model)
{
    <div class="col-md-4" style="padding: 10px;">
        <img src="@item.Image" class="img-responsive" style="height: 200px; width: 200px; margin: auto" />
        <br/>
        <div class="text-center">
            @Html.ActionLink(item.Name, "Details", new { id = item.Id })
        </div>
        <br/>
        <div class="text-center">
            @Html.LabelFor(modelItem => item.Price)
            <div id="P@(item.Id)">
                @Html.DisplayFor(modelItem => item.Price)
            </div>
        </div>
        <div class="text-center">
            @Html.LabelFor(modelItem => item.HighestBidder)
            <div id="B@(item.Id)">
                @Html.DisplayFor(modelItem => item.HighestBidder)
            </div>
        </div>
        <div class="text-center">
            @Html.LabelFor(modelItem => item.H)
            <div class="expiresIn">
                <span class="hours">@Html.DisplayFor(modelItem => item.H)</span>
                :
                <span class="minutes">@Html.DisplayFor(modelItem => item.M)</span>
                :
                <span class="seconds">@Html.DisplayFor(modelItem => item.S)</span>
            </div>
        </div>
        <br/>
        @using (Html.BeginForm("Bid", "Auctions", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="form-actions no-color text-center">
                @Html.Hidden("id", item.Id)
                <input type="submit" value="Bid now!" class="btn btn-default" style="margin: auto; width: 100%"/>
            </div>
        }
    </div>
}
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))


@section scripts {
    <script src="/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <script src="/SignalR/hubs"></script>
    <script>

        $.connection.hub.start().done(function() {});

        $(function() {
            var bidHub = $.connection.bidHub;
            bidHub.client.UpdateAuction = function(id, price, username) {
                document.getElementById("P" + id).innerHTML = price;
                document.getElementById("B" + id).innerHTML = username;
            }
        });

    </script>
    <script>
        function updateTime() {
            var allDivs = $(".expiresIn");
            for (i = 0; i < allDivs.length; i++) {
                var expired = allDivs[i].getElementsByClassName("expired");
                if (expired.length != 0) continue;
                var hourSpan = allDivs[i].getElementsByClassName("hours");
                var minuteSpan = allDivs[i].getElementsByClassName("minutes");
                var secondSpan = allDivs[i].getElementsByClassName("seconds");
                var hour = hourSpan[0].innerText;
                var minute = minuteSpan[0].innerText;
                var second = secondSpan[0].innerText;
                if (--second < 0) {
                    second = 59;
                    if (--minute < 0) {
                        minute = 59;
                        if (--hour < 0) {
                            allDivs[i].innerHTML = "<p class='expired' style='color: red'> Expired! </p>";
                            continue;
                        }
                    }
                }
                hourSpan[0].innerText = hour;
                minuteSpan[0].innerText = minute;
                secondSpan[0].innerText = second;
            }
        }

        var t = setInterval(updateTime, 1000);
    </script>
}